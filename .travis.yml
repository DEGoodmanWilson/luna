language: cpp
sudo: required
dist: trusty

addons: &addons
  apt:
    sources: &sources
      # add PPAs with more up-to-date toolchains
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise-3.6
      - llvm-toolchain-precise-3.7
      - llvm-toolchain-precise-3.8

before_install:
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi

install:
  # Download conan
  - wget http://downloads.conan.io/latest_debian -O conan.deb
  - sudo dpkg -i conan.deb
  - rm conan.deb

  # Automatic detection of your arch, compiler, etc
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then conan install --options build_luna_tests=True --options build_luna_coverage=True -s build_type=Debug --build=missing; else conan install --options build_luna_tests=True --build=missing; fi


after_success:
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then echo Uploading coverage to codecov; fi
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then find tests -name "*.gc*" -delete; fi
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then find tests -name "*.o" -delete; fi
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then find . -name "*luna#tests*gcov" -delete; fi
  - if [ "$GENERATE_COVERAGE" == "ON" ]; then bash <(curl -s https://codecov.io/bash); fi

script:
  - conan build
  - if [ "$RUN_TESTS" == "ON" ]; then ./bin/luna_tests; fi


matrix:
  include:
    - compiler: gcc
      addons:
        apt:
          sources:
            *sources
          packages:
            - g++-4.9
            - python-pip
            - libmicrohttpd-dev
            - libmicrohttpd10
            - libssl-dev
            - curl
      env: GCC_VERSION=4.9

    - compiler: gcc
      addons:
        apt:
          sources:
            *sources
          packages:
            - g++-5
            - python-pip
            - libmicrohttpd-dev
            - libmicrohttpd10
            - libssl-dev
            - curl
      env: GCC_VERSION=5

    - compiler: clang
      addons:
        apt:
          sources:
            *sources
          packages:
            - clang-3.6
            - python-pip
            - libmicrohttpd-dev
            - libmicrohttpd10
            - libssl-dev
            - curl
      env: COMPILER=clang++-3.6

    - compiler: clang
      addons:
        apt:
          sources:
            *sources
          packages:
            - clang-3.7
            - python-pip
            - libmicrohttpd-dev
            - libmicrohttpd10
            - libssl-dev
            - curl
      env: COMPILER=clang++-3.7

    - compiler: clang
      addons:
        apt:
          sources:
            *sources
          packages:
            - clang-3.8
            - python-pip
            - libmicrohttpd-dev
            - libmicrohttpd10
            - libssl-dev
            - curl
      env: COMPILER=clang++-3.8 RUN_TESTS=ON

    - compiler: gcc
      addons:
        apt:
          sources:
            *sources
          packages:
            - g++-5
            - python-pip
            - libmicrohttpd-dev
            - libmicrohttpd10
            - libssl-dev
            - curl
      env: GCC_VERSION=5 GENERATE_COVERAGE=ON

